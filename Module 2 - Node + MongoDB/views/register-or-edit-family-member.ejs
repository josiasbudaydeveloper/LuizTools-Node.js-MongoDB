<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel='stylesheet' href='/stylesheets/style.css' />
  <link rel="icon" type="image/x-icon" href="/images/heart-image.png">
  <style>
    #errMessage {
      color: red;
      font-family: monospace;
    }
  </style>
  <title><%= title %></title>
</head>
<body lang="en">
  <%
    if (member._id) {
      submit = 'Update';
      action = '/edit';
    } else {
      submit = 'Insert';
      action = '/new';
    }
  %>
  <h1><%= title %></h1>
  <form action="<%= action %>" method="post" onload="showErrMessage()">
    <fieldset>
      <legend>Registration Data</legend>
      <span id="errMessage"></span>
      <br>
      <p>
        Name: 
        <input type="text" name="name" required 
        value="<%= member.name %>">
      </p>
      <p>
        Position: 
        <select id="position" name="position">
          <option>Select an option</option>
          <option>Mother</option>
          <option>Father</option>
          <option>Son</option>
          <option>Daughter</option>
        </select>
      </p>
      <p>
        Age: 
        <input type="number" name="age" required 
        value="<%= member.age %>">
      </p>
      <p>
        Occupation: 
        <input type="text" id="occupation" name="occupation">
      </p>

      <p>
        State:
        <select id="states" name="state" required
          onchange="getCities(this.value)"
        ><option>Select a State</option></select>
      </p>

      <p>
        City:
        <select id="cities" name="city" title="Select a state first" required>
        </select>
      </p>

      <!-- A hidden input type is just for store a value in the form -->
      <input type="hidden" name="id" value="<%= member._id %>">

      <p>
        <input type="submit" value="<%= submit %>">
      </p>

      <p>
        <a href="/">Cancel</a>
      </p>
    </fieldset>
  </form>

  <script>
    showErrMessage = () => {
      // Getting the errMessage from the URL
      errMessage = window.location.search.split('=')[1];
      // Decoding the message to plain text
      errMessage = decodeURI(errMessage);

      if(errMessage != 'undefined') {
        document.getElementById('errMessage').innerHTML = errMessage;
      }
    }

    async function getStates() {
      const states = await 
        fetch('https://servicodados.ibge.gov.br/api/v1/localidades/estados')
          .then((response) => response.json())
          .catch((err) => console.log(err));
      const siglas = states.map(item => item.sigla).sort()
      siglas.forEach((state) => {
        const item = document.createElement('option');
        item.innerText = state;
        document.getElementById('states').add(item);
      });
      <% if (member.position || member.occupation || member.state || member.city) { %>
        document.getElementById('position').value = '<%= member.position %>';
        document.getElementById('occupation').value = '<%= member.occupation %>';
        document.getElementById('states').value = '<%= member.state %>';
        getCities('<%= member.state %>')
          .then(() => {
            document.getElementById('cities').value = '<%= member.city %>';
            document.getElementById('cities').title = '';
          });
      <% } %>
    
    }
    getStates();
    
    async function getCities(uf) {
      document.getElementById('cities').innerText = '';

      let cities = await 
        fetch(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${uf}/municipios`)
          .then((response) => response.json())
          .catch((err) => console.log(err));
      
      cities = cities.map(item => item.nome).sort()
      cities.forEach((citie) => {
        const item = document.createElement('option');
        item.innerText = citie;
        document.getElementById('cities').add(item);
        document.getElementById('cities').title = '';
      });
      
    }

  </script>
</body>
</html>